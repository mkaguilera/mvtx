// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MvtkvsService.proto

#ifndef PROTOBUF_MvtkvsService_2eproto__INCLUDED
#define PROTOBUF_MvtkvsService_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace mvtkvs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_MvtkvsService_2eproto();
void protobuf_InitDefaults_MvtkvsService_2eproto();
void protobuf_AssignDesc_MvtkvsService_2eproto();
void protobuf_ShutdownFile_MvtkvsService_2eproto();

class PhaseOneCommitReply;
class PhaseOneCommitRequest;
class PhaseTwoCommitReply;
class PhaseTwoCommitRequest;
class ReadReply;
class ReadRequest;
class WriteReply;
class WriteRequest;

// ===================================================================

class ReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadRequest& default_instance();

  static const ReadRequest* internal_default_instance();

  void Swap(ReadRequest* other);

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const { return New(NULL); }

  ReadRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadRequest* other);
  void UnsafeMergeFrom(const ReadRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint64 tid() const;
  void set_tid(::google::protobuf::uint64 value);

  // optional uint64 start_ts = 2;
  void clear_start_ts();
  static const int kStartTsFieldNumber = 2;
  ::google::protobuf::uint64 start_ts() const;
  void set_start_ts(::google::protobuf::uint64 value);

  // optional uint64 key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:mvtkvs.ReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 tid_;
  ::google::protobuf::uint64 start_ts_;
  ::google::protobuf::uint64 key_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReadRequest> ReadRequest_default_instance_;

// -------------------------------------------------------------------

class ReadReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.ReadReply) */ {
 public:
  ReadReply();
  virtual ~ReadReply();

  ReadReply(const ReadReply& from);

  inline ReadReply& operator=(const ReadReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadReply& default_instance();

  static const ReadReply* internal_default_instance();

  void Swap(ReadReply* other);

  // implements Message ----------------------------------------------

  inline ReadReply* New() const { return New(NULL); }

  ReadReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadReply& from);
  void MergeFrom(const ReadReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReadReply* other);
  void UnsafeMergeFrom(const ReadReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional bool status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:mvtkvs.ReadReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  bool status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReadReply> ReadReply_default_instance_;

// -------------------------------------------------------------------

class WriteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.WriteRequest) */ {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteRequest& default_instance();

  static const WriteRequest* internal_default_instance();

  void Swap(WriteRequest* other);

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const { return New(NULL); }

  WriteRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteRequest* other);
  void UnsafeMergeFrom(const WriteRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint64 tid() const;
  void set_tid(::google::protobuf::uint64 value);

  // optional uint64 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // optional bytes value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:mvtkvs.WriteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 tid_;
  ::google::protobuf::uint64 key_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteRequest> WriteRequest_default_instance_;

// -------------------------------------------------------------------

class WriteReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.WriteReply) */ {
 public:
  WriteReply();
  virtual ~WriteReply();

  WriteReply(const WriteReply& from);

  inline WriteReply& operator=(const WriteReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WriteReply& default_instance();

  static const WriteReply* internal_default_instance();

  void Swap(WriteReply* other);

  // implements Message ----------------------------------------------

  inline WriteReply* New() const { return New(NULL); }

  WriteReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WriteReply& from);
  void MergeFrom(const WriteReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WriteReply* other);
  void UnsafeMergeFrom(const WriteReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  bool status() const;
  void set_status(bool value);

  // @@protoc_insertion_point(class_scope:mvtkvs.WriteReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WriteReply> WriteReply_default_instance_;

// -------------------------------------------------------------------

class PhaseOneCommitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.PhaseOneCommitRequest) */ {
 public:
  PhaseOneCommitRequest();
  virtual ~PhaseOneCommitRequest();

  PhaseOneCommitRequest(const PhaseOneCommitRequest& from);

  inline PhaseOneCommitRequest& operator=(const PhaseOneCommitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseOneCommitRequest& default_instance();

  static const PhaseOneCommitRequest* internal_default_instance();

  void Swap(PhaseOneCommitRequest* other);

  // implements Message ----------------------------------------------

  inline PhaseOneCommitRequest* New() const { return New(NULL); }

  PhaseOneCommitRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhaseOneCommitRequest& from);
  void MergeFrom(const PhaseOneCommitRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhaseOneCommitRequest* other);
  void UnsafeMergeFrom(const PhaseOneCommitRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint64 tid() const;
  void set_tid(::google::protobuf::uint64 value);

  // optional uint64 start_ts = 2;
  void clear_start_ts();
  static const int kStartTsFieldNumber = 2;
  ::google::protobuf::uint64 start_ts() const;
  void set_start_ts(::google::protobuf::uint64 value);

  // optional uint64 commit_ts = 3;
  void clear_commit_ts();
  static const int kCommitTsFieldNumber = 3;
  ::google::protobuf::uint64 commit_ts() const;
  void set_commit_ts(::google::protobuf::uint64 value);

  // repeated uint64 read_node = 4;
  int read_node_size() const;
  void clear_read_node();
  static const int kReadNodeFieldNumber = 4;
  ::google::protobuf::uint64 read_node(int index) const;
  void set_read_node(int index, ::google::protobuf::uint64 value);
  void add_read_node(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      read_node() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_read_node();

  // repeated uint64 write_node = 5;
  int write_node_size() const;
  void clear_write_node();
  static const int kWriteNodeFieldNumber = 5;
  ::google::protobuf::uint64 write_node(int index) const;
  void set_write_node(int index, ::google::protobuf::uint64 value);
  void add_write_node(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      write_node() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_write_node();

  // @@protoc_insertion_point(class_scope:mvtkvs.PhaseOneCommitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > read_node_;
  mutable int _read_node_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > write_node_;
  mutable int _write_node_cached_byte_size_;
  ::google::protobuf::uint64 tid_;
  ::google::protobuf::uint64 start_ts_;
  ::google::protobuf::uint64 commit_ts_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhaseOneCommitRequest> PhaseOneCommitRequest_default_instance_;

// -------------------------------------------------------------------

class PhaseOneCommitReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.PhaseOneCommitReply) */ {
 public:
  PhaseOneCommitReply();
  virtual ~PhaseOneCommitReply();

  PhaseOneCommitReply(const PhaseOneCommitReply& from);

  inline PhaseOneCommitReply& operator=(const PhaseOneCommitReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseOneCommitReply& default_instance();

  static const PhaseOneCommitReply* internal_default_instance();

  void Swap(PhaseOneCommitReply* other);

  // implements Message ----------------------------------------------

  inline PhaseOneCommitReply* New() const { return New(NULL); }

  PhaseOneCommitReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhaseOneCommitReply& from);
  void MergeFrom(const PhaseOneCommitReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhaseOneCommitReply* other);
  void UnsafeMergeFrom(const PhaseOneCommitReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  ::google::protobuf::uint64 node(int index) const;
  void set_node(int index, ::google::protobuf::uint64 value);
  void add_node(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      node() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_node();

  // optional bool vote = 2;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  bool vote() const;
  void set_vote(bool value);

  // @@protoc_insertion_point(class_scope:mvtkvs.PhaseOneCommitReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > node_;
  mutable int _node_cached_byte_size_;
  bool vote_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhaseOneCommitReply> PhaseOneCommitReply_default_instance_;

// -------------------------------------------------------------------

class PhaseTwoCommitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.PhaseTwoCommitRequest) */ {
 public:
  PhaseTwoCommitRequest();
  virtual ~PhaseTwoCommitRequest();

  PhaseTwoCommitRequest(const PhaseTwoCommitRequest& from);

  inline PhaseTwoCommitRequest& operator=(const PhaseTwoCommitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseTwoCommitRequest& default_instance();

  static const PhaseTwoCommitRequest* internal_default_instance();

  void Swap(PhaseTwoCommitRequest* other);

  // implements Message ----------------------------------------------

  inline PhaseTwoCommitRequest* New() const { return New(NULL); }

  PhaseTwoCommitRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhaseTwoCommitRequest& from);
  void MergeFrom(const PhaseTwoCommitRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhaseTwoCommitRequest* other);
  void UnsafeMergeFrom(const PhaseTwoCommitRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 tid = 1;
  void clear_tid();
  static const int kTidFieldNumber = 1;
  ::google::protobuf::uint64 tid() const;
  void set_tid(::google::protobuf::uint64 value);

  // optional bool vote = 2;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  bool vote() const;
  void set_vote(bool value);

  // @@protoc_insertion_point(class_scope:mvtkvs.PhaseTwoCommitRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 tid_;
  bool vote_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhaseTwoCommitRequest> PhaseTwoCommitRequest_default_instance_;

// -------------------------------------------------------------------

class PhaseTwoCommitReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mvtkvs.PhaseTwoCommitReply) */ {
 public:
  PhaseTwoCommitReply();
  virtual ~PhaseTwoCommitReply();

  PhaseTwoCommitReply(const PhaseTwoCommitReply& from);

  inline PhaseTwoCommitReply& operator=(const PhaseTwoCommitReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhaseTwoCommitReply& default_instance();

  static const PhaseTwoCommitReply* internal_default_instance();

  void Swap(PhaseTwoCommitReply* other);

  // implements Message ----------------------------------------------

  inline PhaseTwoCommitReply* New() const { return New(NULL); }

  PhaseTwoCommitReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhaseTwoCommitReply& from);
  void MergeFrom(const PhaseTwoCommitReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhaseTwoCommitReply* other);
  void UnsafeMergeFrom(const PhaseTwoCommitReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  ::google::protobuf::uint64 node(int index) const;
  void set_node(int index, ::google::protobuf::uint64 value);
  void add_node(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      node() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_node();

  // @@protoc_insertion_point(class_scope:mvtkvs.PhaseTwoCommitReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > node_;
  mutable int _node_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_MvtkvsService_2eproto_impl();
  friend void  protobuf_AddDesc_MvtkvsService_2eproto_impl();
  friend void protobuf_AssignDesc_MvtkvsService_2eproto();
  friend void protobuf_ShutdownFile_MvtkvsService_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhaseTwoCommitReply> PhaseTwoCommitReply_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// optional uint64 tid = 1;
inline void ReadRequest::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReadRequest::tid() const {
  // @@protoc_insertion_point(field_get:mvtkvs.ReadRequest.tid)
  return tid_;
}
inline void ReadRequest::set_tid(::google::protobuf::uint64 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.ReadRequest.tid)
}

// optional uint64 start_ts = 2;
inline void ReadRequest::clear_start_ts() {
  start_ts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReadRequest::start_ts() const {
  // @@protoc_insertion_point(field_get:mvtkvs.ReadRequest.start_ts)
  return start_ts_;
}
inline void ReadRequest::set_start_ts(::google::protobuf::uint64 value) {
  
  start_ts_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.ReadRequest.start_ts)
}

// optional uint64 key = 3;
inline void ReadRequest::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ReadRequest::key() const {
  // @@protoc_insertion_point(field_get:mvtkvs.ReadRequest.key)
  return key_;
}
inline void ReadRequest::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.ReadRequest.key)
}

inline const ReadRequest* ReadRequest::internal_default_instance() {
  return &ReadRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ReadReply

// optional bytes value = 1;
inline void ReadReply::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadReply::value() const {
  // @@protoc_insertion_point(field_get:mvtkvs.ReadReply.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReply::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvtkvs.ReadReply.value)
}
inline void ReadReply::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvtkvs.ReadReply.value)
}
inline void ReadReply::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvtkvs.ReadReply.value)
}
inline ::std::string* ReadReply::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mvtkvs.ReadReply.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadReply::release_value() {
  // @@protoc_insertion_point(field_release:mvtkvs.ReadReply.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReply::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mvtkvs.ReadReply.value)
}

// optional bool status = 2;
inline void ReadReply::clear_status() {
  status_ = false;
}
inline bool ReadReply::status() const {
  // @@protoc_insertion_point(field_get:mvtkvs.ReadReply.status)
  return status_;
}
inline void ReadReply::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.ReadReply.status)
}

inline const ReadReply* ReadReply::internal_default_instance() {
  return &ReadReply_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteRequest

// optional uint64 tid = 1;
inline void WriteRequest::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteRequest::tid() const {
  // @@protoc_insertion_point(field_get:mvtkvs.WriteRequest.tid)
  return tid_;
}
inline void WriteRequest::set_tid(::google::protobuf::uint64 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.WriteRequest.tid)
}

// optional uint64 key = 2;
inline void WriteRequest::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WriteRequest::key() const {
  // @@protoc_insertion_point(field_get:mvtkvs.WriteRequest.key)
  return key_;
}
inline void WriteRequest::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.WriteRequest.key)
}

// optional bytes value = 3;
inline void WriteRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequest::value() const {
  // @@protoc_insertion_point(field_get:mvtkvs.WriteRequest.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mvtkvs.WriteRequest.value)
}
inline void WriteRequest::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mvtkvs.WriteRequest.value)
}
inline void WriteRequest::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mvtkvs.WriteRequest.value)
}
inline ::std::string* WriteRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:mvtkvs.WriteRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_value() {
  // @@protoc_insertion_point(field_release:mvtkvs.WriteRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:mvtkvs.WriteRequest.value)
}

inline const WriteRequest* WriteRequest::internal_default_instance() {
  return &WriteRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// WriteReply

// optional bool status = 1;
inline void WriteReply::clear_status() {
  status_ = false;
}
inline bool WriteReply::status() const {
  // @@protoc_insertion_point(field_get:mvtkvs.WriteReply.status)
  return status_;
}
inline void WriteReply::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.WriteReply.status)
}

inline const WriteReply* WriteReply::internal_default_instance() {
  return &WriteReply_default_instance_.get();
}
// -------------------------------------------------------------------

// PhaseOneCommitRequest

// optional uint64 tid = 1;
inline void PhaseOneCommitRequest::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PhaseOneCommitRequest::tid() const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitRequest.tid)
  return tid_;
}
inline void PhaseOneCommitRequest::set_tid(::google::protobuf::uint64 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitRequest.tid)
}

// optional uint64 start_ts = 2;
inline void PhaseOneCommitRequest::clear_start_ts() {
  start_ts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PhaseOneCommitRequest::start_ts() const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitRequest.start_ts)
  return start_ts_;
}
inline void PhaseOneCommitRequest::set_start_ts(::google::protobuf::uint64 value) {
  
  start_ts_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitRequest.start_ts)
}

// optional uint64 commit_ts = 3;
inline void PhaseOneCommitRequest::clear_commit_ts() {
  commit_ts_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PhaseOneCommitRequest::commit_ts() const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitRequest.commit_ts)
  return commit_ts_;
}
inline void PhaseOneCommitRequest::set_commit_ts(::google::protobuf::uint64 value) {
  
  commit_ts_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitRequest.commit_ts)
}

// repeated uint64 read_node = 4;
inline int PhaseOneCommitRequest::read_node_size() const {
  return read_node_.size();
}
inline void PhaseOneCommitRequest::clear_read_node() {
  read_node_.Clear();
}
inline ::google::protobuf::uint64 PhaseOneCommitRequest::read_node(int index) const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitRequest.read_node)
  return read_node_.Get(index);
}
inline void PhaseOneCommitRequest::set_read_node(int index, ::google::protobuf::uint64 value) {
  read_node_.Set(index, value);
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitRequest.read_node)
}
inline void PhaseOneCommitRequest::add_read_node(::google::protobuf::uint64 value) {
  read_node_.Add(value);
  // @@protoc_insertion_point(field_add:mvtkvs.PhaseOneCommitRequest.read_node)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PhaseOneCommitRequest::read_node() const {
  // @@protoc_insertion_point(field_list:mvtkvs.PhaseOneCommitRequest.read_node)
  return read_node_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PhaseOneCommitRequest::mutable_read_node() {
  // @@protoc_insertion_point(field_mutable_list:mvtkvs.PhaseOneCommitRequest.read_node)
  return &read_node_;
}

// repeated uint64 write_node = 5;
inline int PhaseOneCommitRequest::write_node_size() const {
  return write_node_.size();
}
inline void PhaseOneCommitRequest::clear_write_node() {
  write_node_.Clear();
}
inline ::google::protobuf::uint64 PhaseOneCommitRequest::write_node(int index) const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitRequest.write_node)
  return write_node_.Get(index);
}
inline void PhaseOneCommitRequest::set_write_node(int index, ::google::protobuf::uint64 value) {
  write_node_.Set(index, value);
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitRequest.write_node)
}
inline void PhaseOneCommitRequest::add_write_node(::google::protobuf::uint64 value) {
  write_node_.Add(value);
  // @@protoc_insertion_point(field_add:mvtkvs.PhaseOneCommitRequest.write_node)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PhaseOneCommitRequest::write_node() const {
  // @@protoc_insertion_point(field_list:mvtkvs.PhaseOneCommitRequest.write_node)
  return write_node_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PhaseOneCommitRequest::mutable_write_node() {
  // @@protoc_insertion_point(field_mutable_list:mvtkvs.PhaseOneCommitRequest.write_node)
  return &write_node_;
}

inline const PhaseOneCommitRequest* PhaseOneCommitRequest::internal_default_instance() {
  return &PhaseOneCommitRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PhaseOneCommitReply

// repeated uint64 node = 1;
inline int PhaseOneCommitReply::node_size() const {
  return node_.size();
}
inline void PhaseOneCommitReply::clear_node() {
  node_.Clear();
}
inline ::google::protobuf::uint64 PhaseOneCommitReply::node(int index) const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitReply.node)
  return node_.Get(index);
}
inline void PhaseOneCommitReply::set_node(int index, ::google::protobuf::uint64 value) {
  node_.Set(index, value);
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitReply.node)
}
inline void PhaseOneCommitReply::add_node(::google::protobuf::uint64 value) {
  node_.Add(value);
  // @@protoc_insertion_point(field_add:mvtkvs.PhaseOneCommitReply.node)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PhaseOneCommitReply::node() const {
  // @@protoc_insertion_point(field_list:mvtkvs.PhaseOneCommitReply.node)
  return node_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PhaseOneCommitReply::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:mvtkvs.PhaseOneCommitReply.node)
  return &node_;
}

// optional bool vote = 2;
inline void PhaseOneCommitReply::clear_vote() {
  vote_ = false;
}
inline bool PhaseOneCommitReply::vote() const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseOneCommitReply.vote)
  return vote_;
}
inline void PhaseOneCommitReply::set_vote(bool value) {
  
  vote_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseOneCommitReply.vote)
}

inline const PhaseOneCommitReply* PhaseOneCommitReply::internal_default_instance() {
  return &PhaseOneCommitReply_default_instance_.get();
}
// -------------------------------------------------------------------

// PhaseTwoCommitRequest

// optional uint64 tid = 1;
inline void PhaseTwoCommitRequest::clear_tid() {
  tid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PhaseTwoCommitRequest::tid() const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseTwoCommitRequest.tid)
  return tid_;
}
inline void PhaseTwoCommitRequest::set_tid(::google::protobuf::uint64 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseTwoCommitRequest.tid)
}

// optional bool vote = 2;
inline void PhaseTwoCommitRequest::clear_vote() {
  vote_ = false;
}
inline bool PhaseTwoCommitRequest::vote() const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseTwoCommitRequest.vote)
  return vote_;
}
inline void PhaseTwoCommitRequest::set_vote(bool value) {
  
  vote_ = value;
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseTwoCommitRequest.vote)
}

inline const PhaseTwoCommitRequest* PhaseTwoCommitRequest::internal_default_instance() {
  return &PhaseTwoCommitRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PhaseTwoCommitReply

// repeated uint64 node = 1;
inline int PhaseTwoCommitReply::node_size() const {
  return node_.size();
}
inline void PhaseTwoCommitReply::clear_node() {
  node_.Clear();
}
inline ::google::protobuf::uint64 PhaseTwoCommitReply::node(int index) const {
  // @@protoc_insertion_point(field_get:mvtkvs.PhaseTwoCommitReply.node)
  return node_.Get(index);
}
inline void PhaseTwoCommitReply::set_node(int index, ::google::protobuf::uint64 value) {
  node_.Set(index, value);
  // @@protoc_insertion_point(field_set:mvtkvs.PhaseTwoCommitReply.node)
}
inline void PhaseTwoCommitReply::add_node(::google::protobuf::uint64 value) {
  node_.Add(value);
  // @@protoc_insertion_point(field_add:mvtkvs.PhaseTwoCommitReply.node)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
PhaseTwoCommitReply::node() const {
  // @@protoc_insertion_point(field_list:mvtkvs.PhaseTwoCommitReply.node)
  return node_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
PhaseTwoCommitReply::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:mvtkvs.PhaseTwoCommitReply.node)
  return &node_;
}

inline const PhaseTwoCommitReply* PhaseTwoCommitReply::internal_default_instance() {
  return &PhaseTwoCommitReply_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mvtkvs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MvtkvsService_2eproto__INCLUDED
